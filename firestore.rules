rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow admins to read/write any user document
      allow read, write: if isAdmin();
      
      // Allow authenticated users to read their own data
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow authenticated users to update ONLY the two specific feedback fields on their own document.
      // This prevents them from changing their role or any other sensitive data.
      allow update: if request.auth != null && request.auth.uid == userId
                      && request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['showFirstLessonFeedbackPrompt', 'hasSubmittedFirstLessonFeedback']);
    }

    // Rules for the 'internalFeedback' collection
    match /internalFeedback/{feedbackId} {
      // Allow authenticated users to create their own feedback
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Allow admins to read all feedback
      allow read: if isAdmin();
    }

    // Rules for other collections can be added below
    // e.g., match /bookings/{bookingId} { ... }
  }
}
