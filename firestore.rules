
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      // Assumes 'users/{uid}' document has a 'role' field.
      // Make sure you have a user document for the admin with role: 'admin'
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection
    // - Anyone can create their own user document (on signup).
    // - Users can only read/update their own document.
    // - Admins can read/write any user document.
    match /users/{userId} {
      allow read, update: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow create: if isAuthenticated(); // Allow user creation on signup
      allow delete: if isAdmin();
    }

    // Bookings collection
    // - Authenticated users can create their own bookings.
    // - Users can only read their own bookings.
    // - Admins can read/write all bookings.
    match /bookings/{bookingId} {
      allow read: if isAuthenticated() && (resource.data.userID == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() && request.resource.data.userID == request.auth.uid;
      allow update, delete: if isAdmin(); // Only admins can modify or delete bookings
    }

    // Testimonials collection
    // - Allow public read for approved testimonials.
    // - Authenticated users can create testimonials.
    // - Admins can read/write all testimonials.
    match /testimonials/{testimonialId} {
      allow read: if resource.data.status == 'approved' || (isAuthenticated() && resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAdmin();
    }

    // Contact Messages collection
    // - Anyone can create (submit the form).
    // - Only admins can read/write messages.
    match /contactMessages/{messageId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
    
    // Lesson Materials collection
    // - Admins can create, update, delete materials.
    // - Authenticated users can read materials.
    match /lessonMaterials/{materialId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    // Other collections should be locked down by default
    // e.g., match /{document=**} { allow read, write: if false; }
  }
}
