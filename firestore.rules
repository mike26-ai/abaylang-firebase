
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users Collection
    // - Authenticated users can create their own profile.
    // - Users can read and update their own profile.
    // - Admins can read and update any user profile.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update: if isOwner(userId) || isAdmin();
      allow list: if isAdmin(); // Only admins can list all users
    }

    // Bookings Collection
    // - Authenticated users can create bookings for themselves.
    // - Users can read their own bookings.
    // - Admins can read all bookings and update any booking status.
    match /bookings/{bookingId} {
      allow create: if isOwner(request.resource.data.userID);
      allow read, update: if isOwner(resource.data.userID) || isAdmin();
      allow list: if isAdmin();
      
      // Allow public read for a very specific query on the booking page to check for available slots.
      // This is a more open rule, but necessary for the calendar functionality.
      allow list: if request.auth == null && request.query.keys().hasAll(['where', 'limit']) && request.query.limit <= 100;
    }

    // Testimonials Collection
    // - Logged-in users can create testimonials.
    // - Anyone can read 'approved' testimonials.
    // - Admins can read, update (approve/reject), and delete any testimonial.
    match /testimonials/{testimonialId} {
      allow create: if request.auth != null;
      allow read: if resource.data.status == 'approved';
      allow list: if request.query.get("where")[0][2] == "approved"; // Allow public list query only for approved
      allow update, delete: if isAdmin();
      allow read: if isAdmin(); // Admins can read any testimonial regardless of status
    }
    
    // Contact Messages Collection
    // - Anyone can create (submit) a contact message.
    // - Only admins can read, update, or delete them.
    match /contactMessages/{messageId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
      allow list: if isAdmin();
    }
    
    // Lesson Materials Collection
    // - Logged-in users (students) can read materials.
    // - Admins can create, update, and delete materials.
    match /lessonMaterials/{materialId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }
    
    // Default deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
