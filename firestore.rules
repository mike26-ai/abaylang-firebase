
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      // An admin must be a logged-in user whose 'role' field in their user document is 'admin'.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read/write any user profile.
      // A user can read/write their own profile.
      allow read, write: if isAdmin() || request.auth.uid == userId;
    }

    // Rules for the 'bookings' collection
    match /bookings/{bookingId} {
      // Admins can perform any action on any booking.
      allow read, write, delete: if isAdmin();
      
      // Logged-in users can create their own bookings.
      allow create: if request.auth.uid == request.resource.data.userID;
      
      // A user can read or update (e.g., cancel) their own booking.
      allow read, update: if request.auth.uid == resource.data.userID;
    }

    // Rules for the 'contactMessages' collection
    match /contactMessages/{messageId} {
      // Only admins can read or modify contact messages for security.
      allow read, write: if isAdmin();
      
      // Anyone can create (send) a contact message.
      allow create: if true;
    }

    // Rules for the 'testimonials' collection
    match /testimonials/{testimonialId} {
      // Admins can perform any action on any testimonial.
      allow read, write, delete: if isAdmin();
      
      // Any user can read testimonials that have been 'approved'.
      // This is crucial for the public-facing testimonials page.
      allow read: if resource.data.status == 'approved';
      
      // Logged-in users can create testimonials.
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Rules for the 'lessonMaterials' collection
    match /lessonMaterials/{materialId} {
      // Only admins can create, update, or delete lesson materials.
      allow write: if isAdmin();

      // Any authenticated user (student or admin) can read the materials.
      allow read: if request.auth != null;
    }

    // Default deny: By default, no access is allowed to any other collection.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
