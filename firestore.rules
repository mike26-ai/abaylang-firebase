rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USERS collection
    match /users/{userId} {
      // Anyone can create a user profile (register)
      allow create: if request.auth != null;
      // Only the user themselves or an admin can read/update their own profile
      allow read, update: if request.auth.uid == userId || isAdmin();
      // Users cannot delete their own profiles through the app for now
      allow delete: if isAdmin();
    }

    // BOOKINGS collection
    match /bookings/{bookingId} {
      // Any authenticated user can create a booking
      allow create: if request.auth != null;
      // Users can only read their own bookings. Admins can read all.
      allow read: if resource.data.userID == request.auth.uid || isAdmin();
      // Users can update their own bookings (e.g., to cancel). Admins can update any.
      allow update: if resource.data.userID == request.auth.uid || isAdmin();
      // Only admins can delete bookings
      allow delete: if isAdmin();
    }

    // TESTIMONIALS collection
    match /testimonials/{testimonialId} {
      // Anyone can read approved testimonials
      allow read: if resource.data.status == 'approved';
      // Any authenticated user can create a testimonial
      allow create: if request.auth != null;
      // Only admins can view non-approved testimonials or update/delete them
      allow list, update, delete: if isAdmin();
    }

    // CONTACT MESSAGES collection
    match /contactMessages/{messageId} {
       // Anyone can create a contact message
      allow create: if true;
       // Only admins can read/update/delete contact messages
      allow read, update, delete: if isAdmin();
    }

    // CHAT MESSAGES collection (if used)
    match /chatMessages/{messageId} {
      // Any authenticated user can read and write chat messages
      allow read, write: if request.auth != null;
    }
  }
}
