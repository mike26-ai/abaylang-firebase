rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      // Assumes admin's UID is known or they have a specific role in their user doc.
      // Using email for simplicity as per the app's logic.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // == USERS Collection (/users/{userId}) ==
    // Users can create their own profile, and read/update it.
    // Admins can read and write to any user profile.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
      // No delete for users to prevent orphaned data.
    }

    // == BOOKINGS Collection (/bookings/{bookingId}) ==
    // Authenticated users can create bookings.
    // Users can read their own bookings.
    // Public can read minimal data for availability checks.
    // Admins can read/write all bookings.
    match /bookings/{bookingId} {
      allow create: if isSignedIn();
      allow read: if request.auth.uid == resource.data.userID || isAdmin();
      allow update: if request.auth.uid == resource.data.userID || isAdmin();
      // Allow public read only for specific fields needed for the calendar
      allow get: if true; 
    }

    // == TESTIMONIALS Collection (/testimonials/{testimonialId}) ==
    // Anyone can read approved testimonials.
    // Authenticated users can create testimonials.
    // Admins can manage all testimonials.
    match /testimonials/{testimonialId} {
      allow read: if resource.data.status == 'approved' || request.auth.uid == resource.data.userId || isAdmin();
      allow create: if isSignedIn();
      allow update, delete: if isAdmin();
    }

    // == CONTACT MESSAGES Collection (/contactMessages/{messageId}) ==
    // Anyone can create (submit) a message.
    // Only admins can read/update/delete them.
    match /contactMessages/{messageId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
    
    // == LESSON MATERIALS Collection (/lessonMaterials/{materialId}) ==
    // Authenticated users can read materials.
    // Admins can create, update, and delete them.
    match /lessonMaterials/{materialId} {
       allow read: if isSignedIn();
       allow create, update, delete: if isAdmin();
    }

  }
}
