rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    //-------------------------------------------------
    // Users Collection
    //-------------------------------------------------
    match /users/{userId} {
      // Allow users to read their own profile
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      
      // Allow users to create their own profile upon signup
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow users to update their own profile, but not change their role
      allow update: if request.auth != null && request.auth.uid == userId
                      && request.resource.data.role == resource.data.role;

      // Allow admins to manage any user profile
      allow list, write: if isAdmin();
    }

    //-------------------------------------------------
    // Bookings Collection
    //-------------------------------------------------
    match /bookings/{bookingId} {
      // Allow users to create bookings for themselves
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userID;
      
      // Allow users to read their own bookings
      allow read: if request.auth != null && request.auth.uid == resource.data.userID;
      
      // Allow users to update (e.g., cancel) their own bookings
      allow update: if request.auth != null && request.auth.uid == resource.data.userID;
      
      // Admins can manage all bookings
      allow list, write: if isAdmin();
      
      // Allow public read for fetching booked slots on a specific date for the booking calendar
      // This is a more open rule, but necessary for the calendar to check availability.
      // It is limited to only reading documents, not listing the whole collection.
      allow get: if true;
    }

    //-------------------------------------------------
    // Testimonials Collection
    //-------------------------------------------------
    match /testimonials/{testimonialId} {
      // Allow any authenticated user to create a testimonial
      allow create: if request.auth != null;

      // Allow public read for testimonials that are approved
      allow read: if resource.data.status == 'approved';
      
      // Admins can manage all testimonials
      allow write, list: if isAdmin();
      
      // Explicitly allow the query for approved testimonials on the public page
      allow list: if request.query.get("status") == "approved";
    }

    //-------------------------------------------------
    // Contact Messages Collection
    //-------------------------------------------------
    match /contactMessages/{messageId} {
      // Anyone can send a message
      allow create: if true;
      
      // Only admins can read or manage messages
      allow read, write, list: if isAdmin();
    }
    
    //-------------------------------------------------
    // Chat Messages Collection
    //-------------------------------------------------
    match /chatMessages/{chatMessageId} {
       // Only authenticated users can read or write chat messages
       allow read, write: if request.auth != null;
    }

    //-------------------------------------------------
    // Lesson Materials Collection
    //-------------------------------------------------
    match /lessonMaterials/{materialId} {
        // Students can read all materials, Admins can manage them
        allow read: if request.auth != null;
        allow write, list: if isAdmin();
    }

  }
}
