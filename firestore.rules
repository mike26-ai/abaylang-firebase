rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for Admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users Collection
    match /users/{userId} {
      // Admins can read/write any user profile
      allow read, write: if isAdmin();
      
      // A user can create their own profile document
      allow create: if request.auth.uid == userId;
      
      // A user can read and update their own profile
      allow read, update: if request.auth.uid == userId;
    }

    // Bookings Collection
    match /bookings/{bookingId} {
      // Admins can read/write any booking
      allow read, write: if isAdmin();
      
      // Authenticated users can create bookings for themselves
      allow create: if request.auth.uid == request.resource.data.userID;
      
      // Users can read/update their own bookings
      allow read, update: if request.auth.uid == resource.data.userID;

      // Allow listing of own bookings. THIS IS THE FIX.
      allow list: if request.auth.uid == request.query.where.userID;
    }

    // Allow anyone to read the booked slots for the calendar availability feature.
    // This is safe as it only reveals date/time, not user info.
    match /bookings/{bookingId} {
       allow list: if request.query.keys.hasAny(['date', 'status']);
    }

    // Testimonials Collection
    match /testimonials/{testimonialId} {
      // Admins can manage all testimonials
      allow read, write, delete: if isAdmin();
      
      // Authenticated users can create testimonials
      allow create: if request.auth.uid == request.resource.data.userId;
      
      // Anyone can read approved testimonials
      allow list, get: if resource.data.status == 'approved';
    }

    // Contact Messages Collection
    match /contactMessages/{messageId} {
      // Admins can read/delete contact messages
      allow read, delete: if isAdmin();

      // Anyone can create a contact message
      allow create: if true;
    }
    
    // Lesson Materials Collection
    match /lessonMaterials/{materialId} {
      // Admins can manage all materials
      allow read, write, delete: if isAdmin();
      
      // Authenticated users (students) can read materials
      allow list, get: if request.auth != null;
    }

    // Chat Messages Collection
    match /chatMessages/{messageId} {
      // Any authenticated user can read chat messages
      allow read: if request.auth != null;
      
      // An authenticated user can only create messages as themselves
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
  }
}
