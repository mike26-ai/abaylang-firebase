
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      // Assumes an 'admins' collection where document IDs are user UIDs
      // Or checks a role field on the user's profile
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    //------------------------------------------------------------
    // Users Collection
    // - Anyone can create their own user profile during sign-up.
    // - Authenticated users can read their own profile.
    // - Authenticated users can update their own profile data.
    // - Admins can read/write any user profile.
    //------------------------------------------------------------
    match /users/{userId} {
      allow read, update: if isAuthenticated() && request.auth.uid == userId || isAdmin();
      allow create: if isAuthenticated();
      allow delete: if isAdmin();
    }

    //------------------------------------------------------------
    // Bookings Collection
    // - Authenticated users can create their own bookings.
    // - Users can read and update (e.g., cancel) their own bookings.
    // - Admins can read/write any booking.
    // - Public read is allowed for checking availability on the booking page.
    //------------------------------------------------------------
    match /bookings/{bookingId} {
      allow read: if isAuthenticated() || isAdmin(); // Allow logged in users to read schedule
      allow create: if isAuthenticated();
      allow update, delete: if (isAuthenticated() && resource.data.userID == request.auth.uid) || isAdmin();
    }

    //------------------------------------------------------------
    // Testimonials Collection
    // - Public can read 'approved' testimonials.
    // - Authenticated users can create testimonials.
    // - Admins can read/write any testimonial for moderation.
    //------------------------------------------------------------
    match /testimonials/{testimonialId} {
      allow read: if resource.data.status == 'approved' || isAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    //------------------------------------------------------------
    // Contact Messages Collection
    // - Anyone can create (submit) a contact message.
    // - Only admins can read, update, or delete them.
    //------------------------------------------------------------
    match /contactMessages/{messageId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
    
    //------------------------------------------------------------
    // Lesson Materials Collection
    // - Authenticated users can read materials.
    // - Admins can create, update, and delete materials.
    //------------------------------------------------------------
    match /lessonMaterials/{materialId} {
       allow read: if isAuthenticated();
       allow create, update, delete: if isAdmin();
    }

    //------------------------------------------------------------
    // Chat Messages (Placeholder if ever implemented)
    // - Authenticated users can read and write messages.
    //------------------------------------------------------------
    match /chatMessages/{chatId} {
      allow read, create: if isAuthenticated();
      allow update, delete: if isAdmin(); // Or if request.auth.uid == resource.data.userId
    }

    // Default deny all other collections/paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
